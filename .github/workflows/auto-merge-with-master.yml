name: Auto Create PR

on:
  push:
    branches:
      - jconf

jobs:
  auto-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          ref: jconf
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Fetch base branch
        run: |
          git fetch origin master

      - name: Push jconf branch
        run: |
          git push origin jconf || echo "Branch already exists"

      - name: Install dependencies
        run: |
          pacman -Sy --noconfirm git base-devel curl tar
          # Install GitHub CLI manually
          GH_VERSION=$(curl -s https://api.github.com/repos/cli/cli/releases/latest | grep '"tag_name":' | cut -d '"' -f 4)
          curl -L -o gh.tar.gz "https://github.com/cli/cli/releases/download/${GH_VERSION}/gh_${GH_VERSION#v}_linux_amd64.tar.gz"
          tar -xzf gh.tar.gz
          cp gh_*/bin/gh /usr/local/bin/
          chmod +x /usr/local/bin/gh
          
          # Confirm gh installed
          gh --version

      - name: Fetch base branch
        run: |
          git fetch origin master

      - name: Push jconf branch
        run: |
          git push origin jconf || echo "Branch already exists"

      - name: Install dependencies
        run: |
          pacman -Sy --noconfirm git base-devel curl tar
          # Install GitHub CLI manually
          GH_VERSION=$(curl -s https://api.github.com/repos/cli/cli/releases/latest | grep '"tag_name":' | cut -d '"' -f 4)
          curl -L -o gh.tar.gz "https://github.com/cli/cli/releases/download/${GH_VERSION}/gh_${GH_VERSION#v}_linux_amd64.tar.gz"
          tar -xzf gh.tar.gz
          cp gh_*/bin/gh /usr/local/bin/
          chmod +x /usr/local/bin/gh
          
          # Confirm gh installed
          gh --version

      - name: Fetch base branch
        run: |
          git fetch origin master
          git fetch origin jconf
          git checkout jconf

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Auto update jconf" \
            --body "Automated PR from workflow" \
            --base master \
            --head jconf || echo "PR already exists or failed"

      - name: Enable Auto-Merge
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL=$(gh pr list --head jconf --state open --limit 1 | awk '{print $1}')
          if [ -n "$PR_URL" ]; then
            gh pr merge "$PR_URL" --auto --merge || echo "Auto-merge failed"
          else
            echo "No open PR found for jconf"
          fi
